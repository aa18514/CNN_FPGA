


public class ReductionTree extends KernelLib{

	private DFEVar ReductionTree(DFEVector<DFEVar> list, int size){ 
		int l = size/2; 
		int j = 0; 
		if(size == 1) 
			return list[0] 
		else{
			DFEVector<DFEVar> first_layer = new DFEVectorType<DFEVar>(dfeFix(16, 8, SignMode.TWOSCOMPLEMENT), l); 
			for(int i = 0; i < 2*l; i = i + 2, j = j + 1){
				first_layer[j] <== list[i] + list[i+1]; 
			}
			if( size % 2 != 0)
				return(list[size - 1] + ReductionTree.adder2Tree(first_layer, l)); 
			else
				return(Reduction
